services:
  traefik:
    image: traefik:v2.11.16
    pull_policy: always
    labels:
      ru.grachevko.dhu: 'traefik.astra50.local:0:astra50_traefik'
      traefik.enable: true
      traefik.http.routers.astra50-traefik.rule: Host(`traefik.astra50.local`)
      traefik.http.routers.astra50-traefik.entrypoints: web
      traefik.http.routers.astra50-traefik.service: api@internal
    container_name: astra50_traefik
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.network=astra50
      - --providers.docker.exposedByDefault=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  crm:
    pull_policy: never
    build:
      target: node-base
      context: crm/
    extra_hosts:
      - crm.astra50.local:0.0.0.0
    labels:
      ru.grachevko.dhu: 'crm.astra50.local:0:astra50_traefik'
      traefik.enable: true
      traefik.http.routers.astra50-crm.rule: Host(`crm.astra50.local`) && !Path(`/v1/graphql`)
      traefik.http.routers.astra50-crm.entrypoints: web
      traefik.http.services.astra50-crm.loadbalancer.server.port: 80
    command: sh -c "npm run codegen:watch & npm run start"
    environment:
      HOST: crm.astra50.local
      PORT: 80
    volumes:
      - ./crm:/app
      - ./var/node:/home/node
    working_dir: /app
    user: ${UID:-1000}:${GID:-1000}

  sneg:
    image: astra50/sneg:node-base
    pull_policy: never
    build:
      target: node-base
      context: sneg/
    extra_hosts:
      - sneg.astra50.local:0.0.0.0
    labels:
      ru.grachevko.dhu: 'sneg.astra50.local:0:astra50_traefik'
      traefik.enable: true
      traefik.http.routers.astra50-sneg.rule: Host(`sneg.astra50.local`) && !Path(`/v1/graphql`)
      traefik.http.routers.astra50-sneg.entrypoints: web
      traefik.http.services.astra50-sneg.loadbalancer.server.port: 80
    command: npm run start
    environment:
      HOST: sneg.astra50.local
      PORT: 80
    volumes:
      - ./sneg:/app
      - ./var/node:/home/node
    working_dir: /app
    user: ${UID:-1000}:${GID:-1000}

  www:
    pull_policy: never
    build:
      target: node-base
      context: www/
    extra_hosts:
      - www.astra50.local:0.0.0.0
    labels:
      ru.grachevko.dhu: 'www.astra50.local:0:astra50_traefik'
      traefik.enable: true
      traefik.http.routers.astra50-www.rule: Host(`www.astra50.local`) && !Path(`/v1/graphql`)
      traefik.http.routers.astra50-www.entrypoints: web
      traefik.http.services.astra50-www.loadbalancer.server.port: 80
    command: sh -c "npm run codegen:watch & npm run start"
    environment:
      HOST: www.astra50.local
      PORT: 80
    volumes:
    - ./www:/app
    - ./var/node:/home/node
    working_dir: /app
    user: ${UID:-1000}:${GID:-1000}

  alice:
    build:
      dockerfile: alice/Dockerfile
      target: golang
    labels:
      ru.grachevko.dhu: 'alice.astra50.local:0:astra50_traefik'
      traefik.enable: true
      traefik.http.routers.astra50-alice.rule: Host(`alice.astra50.local`)
      traefik.http.routers.astra50-alice.entrypoints: web
      traefik.http.services.astra50-alice.loadbalancer.server.port: 8080
    command: air serve
    working_dir: /app/alice
    environment:
      GOPATH: ${GOPATH}
      POSTGRES_URI: postgresql://astra50:astra50@postgres:5432/astra50?sslmode=disable
      JWKS_URL: https://sso.astra50.ru/auth/realms/astra50/protocol/openid-connect/certs
    volumes:
    - ./:/app
    - ${GOPATH}:${GOPATH}
    - ${HOME}/.netrc:/home/app/.netrc:ro
    - ${HOME}/.cache/go-build:/home/app/.cache/go-build
    user: ${USER_ID}:${GROUP_ID}

  postgres:
    image: postgres:14.2-alpine
    labels:
      ru.grachevko.dhu: 'postgres.astra50.local'
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
        tmpfs:
          size: 4294967296
      - ./:/app
    working_dir: /app
    environment:
      POSTGRES_DB: astra50
      POSTGRES_USER: astra50
      POSTGRES_PASSWORD: astra50
      PGDATABASE: astra50
      PGUSER: astra50
      PGPASSWORD: astra50

  hasura:
    build:
      context: ./hasura
      target: hasura
    labels:
      ru.grachevko.dhu: 'api.astra50.local;{crm,sneg}.astra50.local:0:astra50_traefik'
      traefik.enable: true
      traefik.http.routers.astra50-hasura.rule: Host(`crm.astra50.local`, `sneg.astra50.local`, `www.astra50.local`) && Path(`/v1/graphql`)
      traefik.http.routers.astra50-hasura.entrypoints: web
      traefik.http.services.astra50-hasura.loadbalancer.server.port: 80
    command:
      - graphql-engine
      - serve
      - --server-port=80
      - --unauthorized-role=anonymous
      - --cors-domain=*
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://astra50:astra50@postgres:5432/astra50
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://astra50:astra50@postgres:5432/hasura
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'false'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: '{"jwk_url": "https://sso.astra50.ru/auth/realms/astra50/protocol/openid-connect/certs"}'
      HASURA_GRAPHQL_ADMIN_SECRET: admin
      HASURA_EVENT_SECRET: admin
      HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS: 'false'
    healthcheck:
      disable: true
    working_dir: /data
    volumes:
    - ./hasura:/data:ro
    networks:
      default:
        aliases:
          - api.astra50.local

  hasura-console:
    build:
      context: ./hasura
      target: hasura
    extra_hosts:
      - hasura-console.astra50.local:0.0.0.0
    labels:
      ru.grachevko.dhu: 'hasura-console.astra50.local'
    entrypoint: hasura-cli
    command:
      - console
      - --address=hasura-console.astra50.local
      - --console-port=80
      - --api-host=http://hasura-console.astra50.local
      - --no-browser
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: admin
    working_dir: /app
    volumes:
      - ./hasura:/app
      - ./var/hasura:/.hasura
    user: ${UID:-1000}:${GID:-1000}
    healthcheck:
      test: curl --fail http://127.0.0.1/healthz

  gq:
    build:
      context: ./hasura
      target: gq
    environment:
      GRAPHQURL_ENDPOINT: http://hasura/v1/graphql

networks:
  default:
    name: astra50
    ipam:
      config:
        - subnet: 192.168.64.0/24
